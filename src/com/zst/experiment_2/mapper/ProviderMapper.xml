<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zst.experiment_2.dao.ProviderMapper">
  <resultMap id="BaseResultMap" type="com.zst.experiment_2.entity.Provider">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="proCode" jdbcType="VARCHAR" property="proCode" />
    <result column="proName" jdbcType="VARCHAR" property="proName" />
    <result column="proDesc" jdbcType="VARCHAR" property="proDesc" />
    <result column="proContact" jdbcType="VARCHAR" property="proContact" />
    <result column="proPhone" jdbcType="VARCHAR" property="proPhone" />
    <result column="proAddress" jdbcType="VARCHAR" property="proAddress" />
    <result column="proFax" jdbcType="VARCHAR" property="proFax" />
    <result column="createdBy" jdbcType="BIGINT" property="createdBy" />
    <result column="creationDate" jdbcType="TIMESTAMP" property="creationDate" />
    <result column="modifyDate" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="modifyBy" jdbcType="BIGINT" property="modifyBy" />
  </resultMap>
  <sql id="Base_Column_List">
    id, proCode, proName, proDesc, proContact, proPhone, proAddress, proFax, createdBy, 
    creationDate, modifyDate, modifyBy
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from smbms_provider
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from smbms_provider
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zst.experiment_2.entity.Provider" keyProperty="id" useGeneratedKeys="true">
    insert into smbms_provider (id, proCode, proName, 
      proDesc, proContact, proPhone, 
      proAddress, proFax, createdBy, 
      creationDate, modifyDate, modifyBy
      )
    values (#{id,jdbcType=BIGINT}, #{proCode,jdbcType=VARCHAR}, #{proName,jdbcType=VARCHAR}, 
      #{proDesc,jdbcType=VARCHAR}, #{proContact,jdbcType=VARCHAR}, #{proPhone,jdbcType=VARCHAR}, 
      #{proAddress,jdbcType=VARCHAR}, #{proFax,jdbcType=VARCHAR}, #{createdBy,jdbcType=BIGINT}, 
      #{creationDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, #{modifyBy,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zst.experiment_2.entity.Provider">
    insert into smbms_provider
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="proCode != null">
        proCode,
      </if>
      <if test="proName != null">
        proName,
      </if>
      <if test="proDesc != null">
        proDesc,
      </if>
      <if test="proContact != null">
        proContact,
      </if>
      <if test="proPhone != null">
        proPhone,
      </if>
      <if test="proAddress != null">
        proAddress,
      </if>
      <if test="proFax != null">
        proFax,
      </if>
      <if test="createdBy != null">
        createdBy,
      </if>
      <if test="creationDate != null">
        creationDate,
      </if>
      <if test="modifyDate != null">
        modifyDate,
      </if>
      <if test="modifyBy != null">
        modifyBy,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="proCode != null">
        #{proCode,jdbcType=VARCHAR},
      </if>
      <if test="proName != null">
        #{proName,jdbcType=VARCHAR},
      </if>
      <if test="proDesc != null">
        #{proDesc,jdbcType=VARCHAR},
      </if>
      <if test="proContact != null">
        #{proContact,jdbcType=VARCHAR},
      </if>
      <if test="proPhone != null">
        #{proPhone,jdbcType=VARCHAR},
      </if>
      <if test="proAddress != null">
        #{proAddress,jdbcType=VARCHAR},
      </if>
      <if test="proFax != null">
        #{proFax,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="creationDate != null">
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyBy != null">
        #{modifyBy,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zst.experiment_2.entity.Provider">
    update smbms_provider
    <set>
      <if test="proCode != null">
        proCode = #{proCode,jdbcType=VARCHAR},
      </if>
      <if test="proName != null">
        proName = #{proName,jdbcType=VARCHAR},
      </if>
      <if test="proDesc != null">
        proDesc = #{proDesc,jdbcType=VARCHAR},
      </if>
      <if test="proContact != null">
        proContact = #{proContact,jdbcType=VARCHAR},
      </if>
      <if test="proPhone != null">
        proPhone = #{proPhone,jdbcType=VARCHAR},
      </if>
      <if test="proAddress != null">
        proAddress = #{proAddress,jdbcType=VARCHAR},
      </if>
      <if test="proFax != null">
        proFax = #{proFax,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        createdBy = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="creationDate != null">
        creationDate = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null">
        modifyDate = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyBy != null">
        modifyBy = #{modifyBy,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zst.experiment_2.entity.Provider">
    update smbms_provider
    set proCode = #{proCode,jdbcType=VARCHAR},
      proName = #{proName,jdbcType=VARCHAR},
      proDesc = #{proDesc,jdbcType=VARCHAR},
      proContact = #{proContact,jdbcType=VARCHAR},
      proPhone = #{proPhone,jdbcType=VARCHAR},
      proAddress = #{proAddress,jdbcType=VARCHAR},
      proFax = #{proFax,jdbcType=VARCHAR},
      createdBy = #{createdBy,jdbcType=BIGINT},
      creationDate = #{creationDate,jdbcType=TIMESTAMP},
      modifyDate = #{modifyDate,jdbcType=TIMESTAMP},
      modifyBy = #{modifyBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap type="com.zst.experiment_2.entity.Bill" id="billResult">
    <id property="id" column="b_id"/>
    <result property="billCode" column="billCode"/>
    <result property="productName" column="productName"/>
    <result property="proName" column="proName"/>
    <result property="totalPrice" column="totalPrice"/>
    <result property="isPayment" column="isPayment"/>
    <result column="creationDate" jdbcType="TIMESTAMP" property="creationDate" />

  </resultMap>
  <!--(provider表-bill表：1对多关系）-->
  <resultMap id="providerBillResult" type="com.zst.experiment_2.entity.Provider">
    <id property="id" column="id"/>
    <result property="proCode" column="proCode"/>
    <result property="proName" column="proName"/>
    <result property="proContact" column="proContact"/>
    <result property="proPhone" column="proPhone"/>
    <!--1对多关联-->
    <collection property="bills" ofType="com.zst.experiment_2.entity.Bill" resultMap="billResult"/>
  </resultMap>
  <select id="getBillListByProviderId" parameterType="java.lang.Integer" resultMap="providerBillResult">
     select
                p.*,b.id as b_id,b.billCode,b.productName,b.totalPrice,b.isPayment
            from smbms_provider as p left join smbms_bill as b on p.id=b.providerId
            where 1=1
            <if test=" id != null">
             and  p.id=#{id}
            </if>

  </select>
  <select id="getProviderNames" parameterType="String" resultType="String">
    select proName from smbms_provider  as p left join smbms_bill as b on b.providerId = p.id
    where 1=1
    <if test=" productName !=null">
      and productName = #{productName}
    </if>
  </select>
</mapper>